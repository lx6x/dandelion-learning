<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dandelion</groupId>
    <artifactId>dandelion-learning</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <name>dandelion-learning - 主</name>

    <modules>
        <module>dandelion-commons</module>
        <module>dandelion-scheduling</module>
        <module>dandelion-oss</module>
        <module>dandelion-doc</module>
        <module>dandelion-test</module>
        <module>dandelion-design-patterns</module>
        <module>dandelion-data</module>
        <module>dandelion-thread</module>
        <module>dandelion-feignclient</module>
        <module>dandelion-security</module>
        <module>dandelion-mybatis-generator</module>
        <module>dandelion-netty</module>
        <module>dandelion-limiter</module>
        <module>dandelion-repeat-submit</module>
        <module>dandelion-ureport2</module>
        <module>dandelion-arithmetic</module>
        <module>dandelion-bigdata</module>
        <module>dandelion-oshi</module>
        <module>dandelion-nacos</module>
        <module>dandelion-locak</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud-alibaba.version>2.2.3.RELEASE</spring-cloud-alibaba.version>
        <nacos.version>2.2.3.RELEASE</nacos.version>
        <mybatis-plus.version>3.4.3.1</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.0</mybatis-plus-generator.version>
        <spring-cloud.version>Hoxton.SR7</spring-cloud.version>
        <slf4j.version>1.7.32</slf4j.version>
        <smart-doc.version>2.2.9</smart-doc.version>
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <mybatis.version>2.2.0</mybatis.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.73</version>
            </dependency>
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>${spring-boot.version}</version>
            </dependency>-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>5.7.9</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

    </dependencies>

    <!-- 在最外层的父模块(dandelion-parent模块)的pom.xml文件最下面加上：-->
    <build>
        <pluginManagement>
            <plugins>
                <!--compiler-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <!--可以把依赖的包都打包到生成的Jar包中-->
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 打包去除test -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.21.0</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>

                <!-- 多模块 smart doc 文件生成使用 -->
                <plugin>
                    <groupId>com.github.shalousun</groupId>
                    <artifactId>smart-doc-maven-plugin</artifactId>
                    <version>${smart-doc.version}</version>
                    <configuration>
                        <!--指定生成文档的使用的配置文件-->
                        <configFile>${basedir}/src/main/resources/smart-doc.json</configFile>
                        <!--指定项目名称-->
                        <projectName>dandelion-parent</projectName>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>html</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <!-- 两个 **  表示多级目录,一个 * 表示只有一级目录 -->
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <!-- 项目编译打包时将resource目录中的配置文件进行打包，默认是不进行打包的 -->
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
    </build>

</project>